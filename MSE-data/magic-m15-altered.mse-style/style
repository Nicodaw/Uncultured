mse version: 2.0.0
game: magic
short name: M15 Mainframe
full name: M15 w/Text altering
icon: card-sample.png
installer group: magic/m15 style/normal cards
position hint: 001

version: 2017-06-01
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-default-image.mse-include
	version: 2007-09-23
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-identity-new.mse-include
	version: 2012-01-22
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mainframe-extras.mse-include
	version: 2018-01-01

card width: 375
card height: 523
card dpi: 150
##### Flavor bar image by SirnightNano
##### Ancestral generic mana by ancestral
############################################################## Extra scripts
init script:
	# Load scripts for image box
	include file: /magic-default-image.mse-include/scripts
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_prefix := [card: "" nyx: "nyx/" miracle: "miracles/" promo: "promo/" crown: "legend/" map: "maps/" mappt: "maps/" pt: "" stamp: "" identity: "/magic-identity-new.mse-include/"]
	template_suffix := [card: "card.jpg" nyx: "nyx.png" miracle: "miracle.png" promo: "card.jpg" crown: "crown.png" map: "card.png" mappt: "pt.png" pt: "pt.png", stamp: "stamp.jpg" identity: "identity.png"]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	nyx_background := { color_background(type:"nyx",     base_hybrid:card_hybrid) }
	miracle_background := { color_background(type:"miracle",     base_hybrid:card_hybrid) }
	map_background := { color_background(type:"map",     base_hybrid:card_hybrid) }
	promo_background := { color_background(type:"promo",     base_hybrid:card_hybrid) }
	mappt_background := { color_background(type:"mappt",     base_hybrid:pt_hybrid) }
	crown_background := { color_background(type:"crown", base_hybrid: card_hybrid)}

	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	# Is the card a promo card?
	is_promo := { styling.promo }
	has_identity := { styling.color_indicator_dot }
	shrink_type := {if styling.shrink_typeline_text != "" then to_int(styling.shrink_typeline_text) else 0 }
	shrink_name := {if styling.shrink_name_text != "" then to_int(styling.shrink_name_text) else 0 }
	is_unsorted := {styling.remove_from_autocount}
	is_clear := { contains(styling.frames, match: "clear") and not is_map()}
	is_miracle := { contains(styling.frames, match: "miracle") and not is_map()}
	is_nyx := { contains(styling.frames, match: "nyx") and not is_map() }
	is_vehicle := { contains(styling.frames, match: "vehicle") and not is_map()}
	is_map := { contains(styling.frames, match: "map") }
	is_legend := {not is_map() and (contains(styling.frames, match: "legend") or (set.auto_legends and contains(card.super_type, match:"Legendary"))) }
	is_full_art := {contains(styling.frames, match:"fullart") and not is_map() and not is_clear()}
	use_main_rarity := { contains(set.mainframe_rarity_name, match: ".png")}
	un_png := replace@(match:".png", replace: "")
	ancestral_mana := { contains(styling.other_options, match:"ancestral generic")}
	center_map := {is_map() and (card.casting_cost == "" or contains(styling.other_options, match:"always center map names"))}

	chop_top := {if styling.chop_top == "" then 0 else if comma_count(styling.chop_top) == "," or comma_count(styling.chop_top) == ",," then split_text(match:",", styling.chop_top).0 else styling.chop_top}
	chop_bot := {if comma_count(styling.chop_top) == ",," then split_text(match:",", styling.chop_top).1 else if styling.chop_bottom == "" then 0 else styling.chop_bottom}
	top_of_textbox := {(if is_map() then 340 else if is_full_art() then 359 else 327) - (-chop_top()) }
	bottom_of_textbox := {(if is_map() then 475 else 481) - chop_bot() }
	lines_of_flavor := { to_int((length_of_flavor() / char_per_line()) + 0.99) + (if length(split_text(match:"\n", flavor_text()).1) >= max(43,char_per_line()-4) then 2 else if split_text(match:"\n", flavor_text()).1 != "" then length(soft_break_filter(card.flavor_text)) else 0) + length(filter_text(styling.flavor_bar_offset, match:"u")) - length(filter_text(styling.flavor_bar_offset, match:"d")) + (if contains(card.notes, match:"!fbu") then 1 else 0)}
	bar_offset := {if styling_offset() == "-" then 0 else if styling_offset() != "" then -styling_offset() else 0}
	styling_offset := { replace(styling.flavor_bar_offset, match:"(u|d)+", replace: "") }
	bar_equation := { top_of_textbox() + padding_height() + card_style.text.content_height - height_of_flavor() + linebreak_height() - uneven_correction() + correction_coeff() + bar_offset()  + hard_flavor_break() +1 }

############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: text
	name: chop top
	description: Shrinks the textbox X pixels from the top OR shrinks "top,bottom,"
styling field:
	type: text
	name: chop bottom
	description: Shrinks the textbox X pixels from the bottom.
styling field:
	type: text
	name: shrink name text
	description: Reduces the name text N points.
styling field:
	type: text
	name: shrink typeline text
	description: Reduces the typeline text N points.
styling field:
	type: multiple choice
	name: frames
	description: Use these frames. Top level frames may override lower levels.
	choice: map
	choice: clear
	choice: fullart
	choice: legend
	choice: miracle
	choice: vehicle
	choice: nyx
styling field:
	type: multiple choice
	name: other options
	description: Other frame options
	choice: prerelease stamp
	choice: brown legendary vehicle pt
	choice: pokemon evobar
	choice: ancestral generic mana
	choice: always center map names
styling field:
	type: text
	name: flavor bar offset
	description: Move the flavor bar down X pixels. Use negative to move up.
styling field:
	type: text
	name: popout image style
	description: The styling instructions for the popout image field, formatted as "left,top,width,height,". The text MUST end with a comma.
styling field:
	type: boolean
	name: use holofoil stamps
	description: Change to no to disable rare holofoil stamps
styling field:
	type: boolean
	name: color indicator dot
	description: Use the color indicator dot
	initial: no
styling field:
	type: boolean
	name: remove from autocount
	description: Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial: no
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: colored multicolor land name
	description: Use a colored background for the name and type on multicolor land cards with a basic land type. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: promo
	description: Is this card a promo card, with the "P" rarity?
	initial: no
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:  { symbol_variation(symbol: set.symbol, variation: "common") }
			yes: { symbol_variation(symbol: set.symbol, variation: "invertedcommon") }
	frames:
		render style: checklist
		direction: vertical
	other options:
		render style: checklist
		direction: vertical
############################################################## Card fields
card style:
	############################# Background stuff
	border color:
		left: 0
		top : 0
		width:	375
		height:	523
		radius: 18
		left width:   17
		right width:  17
		top width:    17
		bottom width: 18
		z index: 4
		mask: { if is_legend() then "crown_border.png" else "border_mask.png" }
	card color:
		left:	0
		top:	0
		width:	375
		height:	523
		z index: 0
		render style: image
		popup style: in place
		image: { if is_clear() then "" else if is_full_art() then promo_background() else card_background() }
	############################# Name line
	name:
		left: { if center_map() then 55 else if is_map() then 60 else if card.card_symbol=="none" then 32 else 50 }
		top: { if is_map() then 27 else if is_clear() then 31 else 30 }
		right:  { if center_map() then 320 else (if is_map() then 320 else 341) - card_style.casting_cost.content_width }
		height: { 23 - (0.5 * shrink_name()) }
		alignment: {if center_map() then "center bottom shrink-overflow" else "left bottom shrink-overflow" }
		padding bottom: 0
		z index: 2
		font:
			name: { if is_map() then "Beleren Small Caps" else "Beleren Bold" }
			size: { (if is_map() then 14.8 else 16) - shrink_name() }
			color: black
	name 2: 
		left: 33
		top: 54
		width: { if contains(styling.other_options, match: "pokemon evobar") then max(100, card_style.name_2.content_width) else 0}
		height: 20
		alignment: bottom shrink-overflow
		padding bottom: 0
		z index: 3
		font:
			name: Matrix
			size: 10
			style: italic
			color: black
	casting cost:
		right: { if is_map() then 327 else 346}
		top: { if is_map() then 27 else 29}
		width: { max(30, card_style.casting_cost.content_width) + 5 }
		height: 23
		alignment: middle right
		font:
			name: MPlantin
			size: { if is_map() then 14 else 15}
		symbol font:
			name: magic-mana-large
			size: { if is_map() then 14 else 15}
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	card symbol:
		left: {if card.card_symbol=="none" then 20 else 30}
		top: 29
		height: 20
		width: 14
		z index: 1
		render style: image
		choice images:
			tombstone: tombstone.png
	############################# Image
	image:
		left: { if is_clear() or is_map() then 0 else if is_full_art() then 23 else 29}
		top: {if is_map() then 57 else if is_clear() then 0 else 59}
		width: {if is_clear() or is_map() then 375 else if is_full_art() then 328 else 316}
		height:	{if is_clear() then 523 else if is_map() then 241 else if is_full_art() then 423 else 231}
		z index: 1
		default: {default_image(card.card_color)}
		mask: { if is_clear() then "image_mask.png" else if is_full_art() then "promo/image_mask" + (if is_rare() and styling.use_holofoil_stamps then "_rare") + ".png" else ""}
	mainframe image:
		left: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).0 else "0"}
		top: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).1 else "0"}
		width: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).2 else "0"}
		height: {if comma_count(styling.popout_image_style) == ",,,," then split_text(match:",", styling.popout_image_style).3 else "0"}
		z index: 8
	############################# Card type
	indicator:
		left: { if is_map() then 18 else 31}
		top: { if is_clear() or is_map() then 298 else if is_full_art() then 332 else 300 }
		width: 17
		height: 17
		z index: 2
		render style: image
		visible: { styling.color_indicator_dot }
		image: { card_identity() }
	type:
		left: { if is_map() then 85 else if styling.color_indicator_dot then "52" else "32" }
		top: { (if is_map() then 297.5 else if is_clear() then 294 else if is_full_art() then 329 else 296) + shrink_type() }
		width: { if is_map() then 205 else (if styling.color_indicator_dot then "290" else "310") - max(22,card_style.rarity.content_width) }
		height: { (if is_map() then 18 else 20) - shrink_type() }
		alignment: { if is_map() then "center top shrink-overflow" else "top shrink-overflow"}
		z index: 2
		padding top: 2
		font:
			name: Beleren Bold
			size: { (if is_map() then 12 else 13) - shrink_type() }
			color: { if is_full_art() then "white" else "black"}
			shadow color: {if is_full_art() then "black" else rgba(0,0,0,0)}
			shadow displacement x: -1
			shadow displacement y: 1
			separator color: red
	rarity:
		right: { if is_map() then 199 else 344}
		top: { if is_map() then 53 else if is_clear() then 295 else if is_full_art() then 329 else 297 }
		width: 44
		height: 22
		z index: 2
		render style: image
		alignment: middle right
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left: { if is_map() then 40 else 29}
		top: { top_of_textbox() }
		width: { if is_map() then 287 else 314 }
		bottom: { bottom_of_textbox() }
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: { if is_full_art() then "white" else "black"}
			shadow color: {if is_full_art() then "black" else rgba(0,0,0,0)}
			shadow displacement x: -1
			shadow displacement y: 1
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
			scale down to: 6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 4
		padding left:   6
		padding right:  4
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	watermark:
		left: { if is_map() then 40 else 19 }
		top: { if is_full_art() then 359 else 330 }
		width: { if is_map() then 287 else 334 }
		height: { if is_map() then 154 else if is_full_art() then 120 else 152 }
		z index: 3
		render style: image
		popup style: in place
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	############################# PT
	pt:
		z index: 4
		left: 286
		top: { if is_map() then 467 else 469}
		width: 60
		height:	28
		alignment: center middle shrink-overflow
		font:
			name: Beleren Bold
			size: {if is_map() then 14 else 16}
			color: {if is_vehicle() and (not is_legend() or contains(styling.other_options, match:"brown legendary vehicle pt")) then "white" else "black"}
			separator color: red
	############################# Card sorting / numbering
	set code:
		left: 24
		top: 498
		width: 40
		height: 10
		z index: 3
		font:
			name: Relay-Medium
			size: 7
			color: white
			weight: bold
	############################# Copyright stuff
	illustrator:
		left: { 44 + card_style.set_code.content_width }
		top: 497.5
		width: 200
		height: 10
		z index: 3
		font:
			name: Beleren Small Caps Bold
			size: 7.25
			color: white
	copyright:
		right: 350
		top: { if card.pt != "" then 500 else 488 }
		width: 140
		height: 10
		z index: 4
		alignment: middle right shrink-overflow
		visible: {not set.automatic_copyright}
		font:
			name: Matrix
			size: 7
			color: white
			weight: bold
############################################################## Extra card fields
extra card field:
	type: text
	name: card code
	save value: false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount then
			forward_editor(prefix: card_number_m15() + "/" + card_count_m15() + " " + rarity_code() + " ", field: card.card_code_text)
		else
			combined_editor(field1: card.custom_card_number, separator: " " + rarity_code() + " ", field2: card.card_code_text)
extra card field:
	type: choice
	name: artist arrow
	editable: false
	save value: false
	choice: white
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: stamp
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil stamp
	choice: stamp
	save value: false
	editable: false
extra card field:
	type: choice
	name: clear frame
	choice: frame
	save value: false
	editable: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
extra card field:
	type: text
	name: auto copyright
	script: set.copyright
	save value: false
	editable: false
	show statistics: false
extra card field:
	type: choice
	name: mainframe rarity
	choice: rarity
	save value: false
	editable: false
extra card field:
	type: choice
	name: nyx overlay
	choice: nyx
	save value: false
	editable: false
	script: card.card_color
extra card field:
	type: choice
	name: miracle overlay
	choice: miracle
	save value: false
	editable: false
	script: card.card_color
extra card field:
	type: choice
	name: vehicle overlay
	choice: car door
	save value: false
	editable: false
extra card field:
	type: choice
	name: map frame
	script: card.card_color
	save value: false
	editable: false
extra card field:
	type: choice
	name: flavor bar
	choice: bar
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: choice
	name: crown
	script: card.card_color
	editable: false
	save value: false
	show statistics: false
extra card field:
	type: text
	name: promo label
	save value: true
	description: The golden promo label.
extra card field:
	type: choice
	name: evobar
	choice: evo
	save value: false
	editable: false
extra card field:
	type: choice
	name: evobar tip
	choice: evo
	save value: false
	editable: false
extra card style:
	promo label:
		left: 40
		top: { if is_full_art() then 295 else 262 }
		width: {if contains(styling.other_options, match:"prerelease stamp") then 295 else 0}
		height: 29
		alignment: middle right
		z index: 4
		font:
			name: ModMatrix
			size: 14
			color: rgb(223,169,41)
	card code:
		left: 24
		top: 488
		width: 120
		height: 10
		z index: 3
		font:
			name: Relay-Medium
			size: 7
			color: white
			weight: bold
	artist arrow:
		left: { 28 + card_style.set_code.content_width }
		top: 500
		width: 12
		height: 7
		z index: 3
		render style: image
		image: artist_arrow.png
	pt box:
		left: { if is_map() then 270 else 273}
		top: { if is_map() then 453 else 466}
		width: { if is_map() then 90 else 81}
		height:	{ if is_map() then 54 else 42}
		z index: 3
		visible: { card.pt != "" }
		render style: image
		image: { if is_map() then mappt_background() else if is_vehicle() and (not is_legend() or contains(styling.other_options, match:"brown legendary vehicle pt")) then "vpt.png" else if is_clear() then "cpt.png" else card_ptbox() }
	stamp:
		left: 165
		top: 472
		width: 46
		height: 26
		z index: 1
		visible: { is_rare() and styling.use_holofoil_stamps and not is_clear() }
		render style: image
		image: { card_stamp() }
		mask: { if is_full_art() then "stamp_mask.png" else ""}
	foil stamp:
		left: 165
		top: 472
		width: 46
		height: 26
		z index: 1
		visible: { is_rare() and styling.use_holofoil_stamps and not is_clear()  }
		render style: image
		image: foil_stamp.png
	foil layer:
		left: 0
		top : 0
		width: 375
		height: 523
		z index: 3
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}
		mask: { "foil_mask" + (if card.pt != "" then "_pt") + (if is_rare() and styling.use_holofoil_stamps then "_rare") + ".png" }
	auto copyright:
		right: 350
		top: { if card.pt != "" then 500 else 488 }
		width: 140
		height: 10
		z index: 4
		alignment: middle right shrink-overflow
		visible: {set.automatic_copyright}
		font:
			name: Matrix
			size: 7
			color: white
			weight: bold
	nyx overlay:
		left: 0
		top: 0
		width: 375
		height: 523
		render style: image
		image: {nyx_background()}
		z index: 0
		visible: {is_nyx()}
		mask: nyxblur.png
	crown:
		left: 0
		top: 0
		width: 375
		height: 523
		render style: image
		image: {if is_clear() then "legend/xcrown.png" else crown_background()}
		z index: 1
		visible: {is_legend() and not is_map()}
	miracle overlay:
		left: 0
		top: 0
		width: 375
		height: 523
		render style: image
		image: {if is_clear() then "miracles/xmiracle.png" else miracle_background()}
		z index: 1
		visible: {is_miracle()}
	vehicle overlay:
		left: 0
		top: 0
		width: 375
		height: 523
		render style: image
		image: {"voverlay" + (if is_full_art() then "_full") + ".png" }
		z index: 0
		visible: {is_vehicle()}
	clear frame:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 1
		render style: image
		image: { if is_rare() and styling.use_holofoil_stamps then "clear_rare.png" else "clear.png"}
		visible: { is_clear() }
	map frame:
		left: 0
		top: 0
		width: 375
		height: 523
		z index: 1
		render style: image
		image: { map_background() }
		visible: { is_map() }
	evobar:
		left: 27
		top: 57
		width: {card_style.name_2.content_width}
		height: 27
		z index: 2
		render style: image
		image: evobar.png
		visible: {contains(styling.other_options, match: "pokemon evobar")}
	evobar tip:
		left: {26.6 + card_style.name_2.content_width}
		top: 57
		width: 36
		height: 27
		z index: 2
		render style: image
		image: evobar_tip.png
		visible: {contains(styling.other_options, match: "pokemon evobar")}
	flavor bar:
		left: 0
		top: { bar_equation() }
		width: 375
		height: 1
		z index: 1
		render style: image
		image: bar.png
		visible: { card.rule_text != "" and remove_tags(card.flavor_text) != "" and set.use_flavor_bar }
		